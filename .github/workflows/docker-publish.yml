name: Build and Push to GHCR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check Docker Hub Status
      id: dockerhub_check
      continue-on-error: true
      run: |
        echo "⏳ Checking Docker Hub availability..."
        if curl -f -s --max-time 10 https://registry-1.docker.io/v2/ > /dev/null 2>&1; then
          echo "✅ Docker Hub is available"
          echo "available=true" >> $GITHUB_OUTPUT
        else
          echo "⚠️  Docker Hub unavailable - using Ubuntu base image instead"
          echo "available=false" >> $GITHUB_OUTPUT
        fi

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:latest
          network=host

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
      timeout-minutes: 20

    - name: Deploy to server (optional webhook)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "🚀 New image pushed to GHCR:"
        echo "${{ steps.meta.outputs.tags }}"
        # Add webhook call to your server here if needed
        # curl -X POST "https://your-server.com/webhook/deploy"
