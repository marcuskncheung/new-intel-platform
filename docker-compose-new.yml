version: '3.8'

services:
  intelligence-platform:
    build: .
    container_name: intelligence-app
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=8080
      - DATABASE_URL=postgresql://intelligence:${DB_PASSWORD}@postgres-db:5432/intelligence_db
      - EXCHANGE_SERVER=webmail.ia.org.hk
      - EXCHANGE_EMAIL=intel@ia.org.hk
      - EXCHANGE_PASSWORD=${EXCHANGE_PASSWORD}
      - ADMIN_EMAIL=admin@ia.org.hk
      - ADMIN_PASSWORD=SecurePassword123!
      - SECRET_KEY=08aee7eae4d9df985ae0ccd4083d361a62c4dda6e4d1bee064bd52ba3654170f
      - DB_ENCRYPTION_KEY=Twz4T9kjRZZe5nDbotLerkWekRI7-IuKugXEUFwsL7c=
    env_file:
      - .env.production
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - intel-network
    volumes:
      - app_logs:/app/logs
      # Mount SQLite data for migration
      - ./instance:/app/migrate_data:ro

  postgres-db:
    image: postgres:15-alpine
    container_name: intelligence-db
    environment:
      - POSTGRES_DB=intelligence_db
      - POSTGRES_USER=intelligence
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"  # For external access if needed
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U intelligence -d intelligence_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - intel-network
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  nginx:
    image: nginx:alpine
    container_name: intelligence-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - intelligence-platform
    restart: unless-stopped
    networks:
      - intel-network

  # Database migration service (runs once)
  db-migrate:
    build: .
    container_name: intelligence-migrate
    environment:
      - DATABASE_URL=postgresql://intelligence:${DB_PASSWORD}@postgres-db:5432/intelligence_db
      - MIGRATION_MODE=true
    volumes:
      - ./instance:/app/migrate_data:ro  # Your SQLite data
    depends_on:
      postgres-db:
        condition: service_healthy
    command: python migrate_sqlite_to_postgres.py
    networks:
      - intel-network
    profiles:
      - migration  # Only run when explicitly requested

  # Database backup service
  db-backup:
    image: postgres:15-alpine
    container_name: intelligence-backup
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres-db
    command: >
      sh -c "
        while true; do
          echo 'Creating PostgreSQL backup...'
          pg_dump -h postgres-db -U intelligence -d intelligence_db > /backups/intelligence_backup_$$(date +%Y%m%d_%H%M%S).sql
          echo 'Backup completed'
          # Keep only last 7 days of backups
          find /backups -name 'intelligence_backup_*.sql' -mtime +7 -delete
          sleep 86400
        done
      "
    networks:
      - intel-network
    profiles:
      - backup

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  intel-network:
    driver: bridge
